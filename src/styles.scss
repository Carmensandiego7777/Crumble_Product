// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@use "@angular/material" as mat;

// Include the common styles for Angular Material. 
@include mat.core();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker hue.
$crumble-primary: mat.define-palette(mat.$indigo-palette);
$crumble-accent: mat.define-palette(mat.$pink-palette, A200, A100, A400);

// The warn palette is optional (defaults to red).
$crumble-warn: mat.define-palette(mat.$red-palette);

// Create the theme object. A theme consists of configurations for individual theming systems such as "color" or "typography".
$crumble-theme: mat.define-light-theme(
  (
    color: (
      primary: $crumble-primary,
      accent: $crumble-accent,
      warn: $crumble-warn,
    ),
    typography: mat.define-typography-config(),
    density: 0,
  )
);

// Include theme styles for core and each component used in your app.
@include mat.all-component-themes($crumble-theme);

/* You can add global styles to this file, and also import other style files */
$base-color: #5ac268;
$black-color: #101811;
$grey-color: #9da49e;
$white-color: #fffffff9;

* {
  font-family: "Jost", sans-serif;
  margin: 0;
}

html, body {
  height: 100%;
}

body {
  margin: 0;
  font-family: Roboto, "Helvetica Neue", sans-serif;
  color: black;
}

.flexActive {
  display: flex;
  justify-content: center;
  align-items: center;
}

.flexBetween {
  display: flex;
  justify-content: space-between;
  align-items: center;
}

.flexAround {
  display: flex;
  justify-content: space-around;
  align-items: center;
}

.log-link {
  text-decoration: none;
  color: black;
  position: relative;
  transition: color 0.3s ease; // Smooth transition for color change

  &::after {
    content: "";
    position: absolute;
    left: 0;
    bottom: -2px;
    width: 100%;
    height: 2px;
    background-color: $base-color; // Color of the underline
    transform: scaleX(0); // Initially scale the underline to 0 (hidden)
    transform-origin: bottom right; // Define the origin for the transformation
    transition: transform 0.3s ease; // Smooth transition for the underline
  }

  &:hover {
    color: $base-color; // Ensures color stays black on hover
  }

  &:hover::after {
    transform: scaleX(1);
    transform-origin: bottom left;
  }
}

@media (max-width: 671px) {
  .log-link {
    &.active {
      color: $base-color; // Change color for active state if desired

      &::after {
        transform: scaleX(1); // Permanently show the underline
        transform-origin: bottom left; // Keep the underline origin consistent with hover
      }
    }
  }
}



// $theme: mat.define-theme((
//   color: (
//     theme-type: light,
//     primary: mat.$azure-palette,
//     tertiary: mat.$blue-palette,
//   )
// ));

// body {
//   @include mat.all-component-themes($theme);
//   font-family: Roboto, "Helvetica Neue", sans-serif;
//   margin: 0;
//   padding: 30px;
//   height: 100%;
// }

// html {
//   height: 100%;
// }

// @include mat.core();
// @include mat.color-variants-backwards-compatibility($theme);


@import '@fortawesome/fontawesome-free/css/all.css';
@import 'mdb-angular-ui-kit/assets/scss/mdb.scss';

